%import common.WS
%import common.NEWLINE
%import common.ESCAPED_STRING
%import common.INT -> INTEGER
%ignore WS

ASTERISK : "*"
EQUAL : "="
OPENSQ : "["
CLOSEDSQ : "]"
CLOSEDCURLY : "}"
COLON : ":"
HASHMARK : "#"
OPENCURLY : "{"
SLASH : "/"

// QKEY is a quoted key.
QKEY : ESCAPED_STRING
// BKEY is a bare candidate key.
BKEY : /[a-zA-Z][a-zA-Z0-9_]*/
// QVALUE is a quoted value.
QVALUE : ESCAPED_STRING

?start: abiffile
?abiffile : ( comment | json_line | cand_line | voteline )*

// comment definition
comment : HASHMARK comment_string NEWLINE
comment_string : /[^\r\n]+/

// json_line - This is a subset of JSON that only allows for key/value pairs. 
json_line : OPENCURLY [json_pair] CLOSEDCURLY comment?
json_pair : (QKEY | BKEY) COLON ( QVALUE | QKEY | INTEGER )
json_key: ( QKEY | BKEY )

// cand_line
cand_line : EQUAL? cand_key cand_id_sep ( cand_square_quoted | cand_key ) comment?
cand_square_quoted : OPENSQ /[^\]]+/ CLOSEDSQ
cand_id_sep : COLON
cand_key: ( QKEY | BKEY )

// voteline
voteline : ballot_count count_sep cands_and_seps comment?
ballot_count : INTEGER
cands_and_seps : cand_element_list

cand_element_list : cand_voter_pref (cand_sep cand_voter_pref)*
cand_voter_pref : ( cand_id | cand_tok_rating )
cand_tok_rating : cand_id SLASH INTEGER
cand_sep : ( eq | gt )
eq : ( "=" | "," )
gt : ">"
count_sep : COLON
cand_id : ( cand_key | cand_square_quoted )
